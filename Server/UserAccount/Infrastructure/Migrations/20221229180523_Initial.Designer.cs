// <auto-generated />
using System;
using Infrastructure.src.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(UserAccountDbContext))]
    [Migration("20221229180523_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.src.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.src.Entity.User", b =>
                {
                    b.OwnsOne("Domain.src.ValueObject.PersonName", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Domain.src.ValueObject.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsOne("Domain.src.ValueObject.ZipCode", "ZipCode", b2 =>
                                {
                                    b2.Property<Guid>("AddressUserId")
                                        .HasColumnType("char(36)");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(8)
                                        .HasColumnType("varchar");

                                    b2.HasKey("AddressUserId");

                                    b2.ToTable("User");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressUserId");
                                });

                            b1.Navigation("ZipCode")
                                .IsRequired();
                        });

                    b.OwnsOne("Domain.src.ValueObject.Bio", "Biography", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("varchar");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Domain.src.ValueObject.EmergencyContact", "EmergencyContact", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("RelationShip")
                                .IsRequired()
                                .HasColumnType("varchar");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.OwnsOne("Domain.src.ValueObject.ContactPhone", "Phone", b2 =>
                                {
                                    b2.Property<Guid>("EmergencyContactUserId")
                                        .HasColumnType("char(36)");

                                    b2.Property<int>("AreaCode")
                                        .HasColumnType("int");

                                    b2.Property<string>("CountryPrefix")
                                        .HasColumnType("longtext");

                                    b2.Property<long>("Number")
                                        .HasColumnType("bigint");

                                    b2.HasKey("EmergencyContactUserId");

                                    b2.ToTable("User");

                                    b2.WithOwner()
                                        .HasForeignKey("EmergencyContactUserId");
                                });

                            b1.OwnsOne("Domain.src.ValueObject.PersonName", "Name", b2 =>
                                {
                                    b2.Property<Guid>("EmergencyContactUserId")
                                        .HasColumnType("char(36)");

                                    b2.HasKey("EmergencyContactUserId");

                                    b2.ToTable("User");

                                    b2.WithOwner()
                                        .HasForeignKey("EmergencyContactUserId");
                                });

                            b1.Navigation("Name")
                                .IsRequired();

                            b1.Navigation("Phone")
                                .IsRequired();
                        });

                    b.OwnsOne("Domain.src.ValueObject.MedicalInfo", "Medical", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Aptitude")
                                .HasColumnType("varchar");

                            b1.Property<string>("Disabilities")
                                .HasColumnType("varchar");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Shared.src.ValueObject.TimeStamps", "TimeStamps", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("date");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("date");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Biography");

                    b.Navigation("EmergencyContact");

                    b.Navigation("Medical");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("TimeStamps")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
