// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserContext.Infrastructure.src.Context;

#nullable disable

namespace UserContext.Infrastructure.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20230117011226_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UserContext.Domain.src.Entity.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PhoneVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("UserContext.Domain.src.Entity.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Birth")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("UserContext.Domain.src.Entity.Account", b =>
                {
                    b.OwnsOne("SharedKernell.src.ValueObject.TimeStamps", "TimeStamps", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("date");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("date");

                            b1.HasKey("AccountId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.OwnsOne("UserContext.Domain.src.ValueObject.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("varchar");

                            b1.HasKey("AccountId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.OwnsOne("UserContext.Domain.src.ValueObject.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("varchar");

                            b1.HasKey("AccountId");

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.OwnsOne("UserContext.Domain.src.ValueObject.Phone", "Phone", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("char(36)");

                            b1.Property<short>("AreaCode")
                                .HasColumnType("smallint");

                            b1.Property<string>("CountryPrefix")
                                .HasColumnType("longtext");

                            b1.Property<long>("PhoneNumber")
                                .HasColumnType("bigint");

                            b1.HasKey("AccountId");

                            b1.HasIndex("PhoneNumber")
                                .IsUnique();

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.OwnsOne("UserContext.Domain.src.ValueObject.Username", "Username", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.HasKey("AccountId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .IsDescending();

                            b1.ToTable("Account");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();

                    b.Navigation("Phone");

                    b.Navigation("TimeStamps")
                        .IsRequired();

                    b.Navigation("Username")
                        .IsRequired();
                });

            modelBuilder.Entity("UserContext.Domain.src.Entity.Person", b =>
                {
                    b.OwnsOne("UserContext.Domain.src.ValueObject.PersonName", "Name", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("SharedKernell.src.ValueObject.TimeStamps", "TimeStamps", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("date");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("date");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("UserContext.Domain.src.ValueObject.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("varchar");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.OwnsOne("UserContext.Domain.src.ValueObject.ZipCode", "ZipCode", b2 =>
                                {
                                    b2.Property<Guid>("AddressPersonId")
                                        .HasColumnType("char(36)");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(8)
                                        .HasColumnType("varchar");

                                    b2.HasKey("AddressPersonId");

                                    b2.ToTable("Person");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressPersonId");
                                });

                            b1.Navigation("ZipCode")
                                .IsRequired();
                        });

                    b.OwnsOne("UserContext.Domain.src.ValueObject.Bio", "Biography", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(300)
                                .HasColumnType("varchar");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.OwnsOne("UserContext.Domain.src.ValueObject.EmergencyContact", "EmergencyContact", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("RelationShip")
                                .HasColumnType("int");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");

                            b1.OwnsOne("UserContext.Domain.src.ValueObject.ContactPhone", "Phone", b2 =>
                                {
                                    b2.Property<Guid>("EmergencyContactPersonId")
                                        .HasColumnType("char(36)");

                                    b2.Property<int>("AreaCode")
                                        .HasColumnType("int");

                                    b2.Property<string>("CountryPrefix")
                                        .HasColumnType("longtext");

                                    b2.Property<long>("Number")
                                        .HasColumnType("bigint");

                                    b2.HasKey("EmergencyContactPersonId");

                                    b2.ToTable("Person");

                                    b2.WithOwner()
                                        .HasForeignKey("EmergencyContactPersonId");
                                });

                            b1.OwnsOne("UserContext.Domain.src.ValueObject.PersonName", "Name", b2 =>
                                {
                                    b2.Property<Guid>("EmergencyContactPersonId")
                                        .HasColumnType("char(36)");

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasMaxLength(15)
                                        .HasColumnType("varchar");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasMaxLength(15)
                                        .HasColumnType("varchar");

                                    b2.HasKey("EmergencyContactPersonId");

                                    b2.ToTable("Person");

                                    b2.WithOwner()
                                        .HasForeignKey("EmergencyContactPersonId");
                                });

                            b1.Navigation("Name")
                                .IsRequired();

                            b1.Navigation("Phone")
                                .IsRequired();
                        });

                    b.OwnsOne("UserContext.Domain.src.ValueObject.MedicalInfo", "Medical", b1 =>
                        {
                            b1.Property<Guid>("PersonId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Aptitude")
                                .HasMaxLength(50)
                                .HasColumnType("varchar");

                            b1.Property<string>("Disabilities")
                                .HasMaxLength(300)
                                .HasColumnType("varchar");

                            b1.HasKey("PersonId");

                            b1.ToTable("Person");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Biography");

                    b.Navigation("EmergencyContact");

                    b.Navigation("Medical");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("TimeStamps")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
